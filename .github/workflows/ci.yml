name: JWQL CI

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Target Branch
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'
        ref: ${{ github.event.pull_request.base.ref }}
    - name: Find Python files
      run: |
        # Find .py files and store the count in a variable
        PY_FILE_COUNT=$(git diff origin/$GITHUB_REF_NAME --name-only -- '*.py' | wc -l)

        # Output the count for debugging purposes
        echo "Found $PY_FILE_COUNT .py files"
        
        # Set an environment variable to be used in the next step
        echo "PY_FILE_COUNT=$PY_FILE_COUNT" >> $GITHUB_ENV
    - name: Run Ruff Check
      run: |
        # Get the value of PY_FILE_COUNT environment variable
        COUNT=$PY_FILE_COUNT
        
        # Check if the count is zero
        if [ "$COUNT" -eq 0 ]; then
          echo "No .py files found, no ruff linting required"
        else
          echo "Found $COUNT .py files, workflow will continue as usual."
          pip install ruff
          ruff check $(git diff origin/$GITHUB_REF_NAME --name-only -- '*.py')
        fi

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: pip install bandit
      - run: bandit ./jwql/ -c .bandit

  test:
    name: test (Python ${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9", "3.10"]

    steps:
      - uses: mamba-org/provision-with-micromamba@v15
        with:
          environment-file: ./environment_python_${{ matrix.python-version }}.yml
          cache-env: true
          cache-downloads: true

      - run: pip install -e .[test]

      - run: conda env export

      - uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: 5.0
        if: runner.os == 'Linux'

      - run: python -c "import jwql; print('Version ' + jwql.__version__); print('Path ' + jwql.__path__[0])"

      - run: pytest jwql/tests/
